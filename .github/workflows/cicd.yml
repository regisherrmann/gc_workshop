name: CICD

on:
  push:
    branches: ["master"]

jobs:
  test:
    runs-on: ubuntu-latest
    name: app' tests
    steps:
      - uses: actions/checkout@v3
      - name: automated tests
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npm run test

  build-publish:
    needs: test
    name: Build And Publish To GCP Artifact Registry
    runs-on: ubuntu-latest
    environment: live
    steps:
      - name: Checkout
        uses: actions/checkout@master

      # Build and publish the Docker image to the GCP Artifact Registry
      - name: Login to GAR for testing
        uses: docker/login-action@v2
        with:
          registry: europe-west1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.SA_KEY }}
      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            europe-west1-docker.pkg.dev/level-night-379310/gcworkshop/gc_workshop:${{ github.sha }}
      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.SA_KEY }}"
          
      - id: "deploy"
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: "gc-workshop"
          image: europe-west1-docker.pkg.dev/level-night-379310/gcworkshop/gc_workshop:${{ github.sha }}
          env_vars: |
            NODE_ENV=production
            PGPASSWORD="${{ secrets.PGPASSWORD }}"
            PGUSER="${{ secrets.PGUSER }}"
            PGHOST=db.sskbhrrfglhacqgohdcf.supabase.co
            PGPORT=5432
          flags: "--port=8080"
          region: "europe-west1"
      
      - name: "deploy-output"
        run: 'curl "${{ steps.deploy.outputs.url }}"'

        


